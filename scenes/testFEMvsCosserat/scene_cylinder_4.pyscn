# -*- coding: utf-8 -*-
import Sofa
import os, sys
from splib.numerics import sin, cos, to_radians
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/'


import Sofa

class Controller(Sofa.PythonScriptController):

    def __init__(self):
        pass

    def initGraph(self, node):
            self.node = node
            self.time = 0.0

    def onBeginAnimationStep(self, dt):
            inputvalue = self.node.getObject('aCableActuator').findData('value')
            self.time = self.time + dt;
            displacement = inputvalue.value[0][0] + 0.010

            if displacement < 0.6:
                print (" "+ str(self.time)+"    "+str(displacement))
                inputvalue.value = str(displacement)

def createScene(rootNode):
                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots SofaPython SofaSparseSolver SofaPreconditioner SofaOpenglVisual CosseratPlugin BeamAdapter')
                rootNode.createObject('VisualStyle', displayFlags='showBehaviorModels showVisualModels hideForceFields showVisual showCollisionModels hideWireframe showInteractionForceFields')

                rootNode.createObject('FreeMotionAnimationLoop')
                rootNode.createObject('GenericConstraintSolver', tolerance="1e-5", maxIterations="100", printLog="0")
                rootNode.gravity = "0 0 0"
                rootNode.dt="0.01"
                rootNode.createObject('BackgroundSetting', color=' 1 1 1 ')
                rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")


                CylinderFEMNode = rootNode.createChild('CylinderFEMNode')
                CylinderFEMNode.createObject('EulerImplicitSolver', rayleighStiffness="0.01", rayleighMass='0.01', firstOrder="0")
                # CylinderFEMNode.createObject('StaticSolver')
                # CylinderFEMNode.createObject('CGLinearSolver', iterations="25", tolerance="0.000001", threshold="1e-5")
                # CylinderFEMNode.createObject('PCGLinearSolver', preconditioners='solver', tolerance="1e-15")
                CylinderFEMNode.createObject('SparseLDLSolver', name='solver')
                CylinderFEMNode.createObject('CylinderGridTopology',name="grid", nx="5", ny="5", nz="20", length="0.75", radius="0.01", axis="1 0 0" )
                CylinderFEMNode.createObject('MechanicalObject', name="Hexa")
                CylinderFEMNode.createObject('UniformMass', totalMass="1")
                CylinderFEMNode.createObject('BoxROI', name='ROI1', box="-0.01 -0.02 -0.05 0.02 0.02 0.05" , drawBoxes='true')
                CylinderFEMNode.createObject('RestShapeSpringsForceField', points='@ROI1.indices', stiffness='1e12')
                CylinderFEMNode.createObject('TetrahedronFEMForceField', name="FEM", youngModulus="1e6", poissonRatio="0.48")
                # CylinderFEMNode.createObject('HexahedronFEMForceField', name="FEM", youngModulus="5e5", poissonRatio="0.3", method="large") # method="large"

                Visu = CylinderFEMNode.createChild('Visu')
                Visu.createObject('OglModel', name="Visual", material="Default Diffuse 1 0 0 1 0.0392157 Ambient 1 0 0 0.2 1 Specular 0 0 0 1 1 Emissive 0 0 0 1 1 Shininess 0 45 ")
                Visu.createObject('IdentityMapping', input="@../Hexa", output="@Visual")

                # # #  This create a new node in the scene. This node is appended to the finger's node.
                tetraMesh = CylinderFEMNode.createChild('tetraMesh')
                tetraMesh.createObject('TetrahedronSetTopologyContainer', name="Container", position="@../grid.position")
                tetraMesh.createObject('TetrahedronSetTopologyModifier', name="Modifier")
                tetraMesh.createObject('TetrahedronSetTopologyAlgorithms', template="Vec3d", name="TopoAlgo" )
                tetraMesh.createObject('TetrahedronSetGeometryAlgorithms',  template="Vec3d", name="GeomAlgo" )
                tetraMesh.createObject('Hexa2TetraTopologicalMapping', name="default28", input="@../grid", output="@Container" )
                tetraMesh.createObject('MeshExporter', filename="cylinder", format="vtk", edges="0", triangles="0", tetras="1", listening="true", exportAtBegin="true")
                # tetraMesh.createObject('TetrahedronFEMForceField', name="FEM", youngModulus="1e6", poissonRatio="0.48")


                ##########################################
                #               Cable 1                   #
                ##########################################
                # cable_position=[
                #         " 0.0 0.005 0.0        0.05 0.005 0.0     0.1 0.005 0.0      0.15 0.005 0.0     0.2 0.005 0.0      0.25 0.005 0.0     0.3 0.005 0.0      0.35 0.005 0.0" +
                #         "  0.4 0.005 0.0       0.45 0.005 0.0     0.5 0.005 0.0      0.55 0.005 0.0     0.6 0.005 0.0      0.65 0.005 0.0     0.7 0.005 0.0      0.75 0.005 0.0 "
                # ]
                # # # #  This create a new node in the scene. This node is appended to the finger's node.
                # cable = CylinderFEMNode.createChild('cable')
                # cable.createObject('MechanicalObject', name="cablePos", position=cable_position,  showObject="1", showIndices="0")
                # cable.createObject('CableConstraint', name="aCableActuator",
                #                         indices=range(0,16),
                #                         template='Vec3d',
                #                         pullPoint=" -0.10 0.0025 0.0",
                #                         #hasPullPoint="0",
                #                         valueType='force',
                #                         minForce=-0.0001,
                #                         #value='3.0'
                #                         )
                # cable.createObject('BarycentricMapping', input_topology="@../Container")
                #
                # cable.createObject('PythonScriptController',classname="Controller")

                cable = tetraMesh.createChild('cable')

                ##########################################
                #               Cable  2                 #
                ##########################################
                cable_position2=[
                        " 0.0 0.005 0.0     0.05 0.00433333333333 0.0       0.1 0.00366666666667 0.0        0.15 0.003 0.0      0.2 0.00233333333333 0.0        0.25 0.00166666666667 0.0 " +
                        " 0.3 0.001 0.0     0.35 0.000333333333333 0.0      0.4 -0.000333333333333 0.0      0.45 -0.001 0.0     0.5 -0.00166666666667 0.0       0.55 -0.00233333333333 0.0 " +
                        " 0.6 -0.003 0.0        0.65 -0.00366666666667 0.0      0.7 -0.00433333333333 0.0       0.75 -0.005 0.0 "
                        ]
                # # #  This create a new node in the scene. This node is appended to the finger's node.
                cableB = tetraMesh.createChild('cableB')
                cableB.createObject('MechanicalObject', name="cablePos", position=cable_position2,  showObject="1", showIndices="0")
                cableB.createObject('CableConstraint', name="aCableActuator",
                                        indices=range(0,16),
                                        # indices='0 1 3 4 5 6 7 8 ',
                                        template='Vec3d',
                                        pullPoint="-0.10 0.0035 0.0",
                                        #hasPullPoint="0",
                                        valueType='force',
                                        minForce=-0.0001,
                                        #value='3.0'
                                        )
                cableB.createObject('BarycentricMapping', input_topology="@../Container")

                cableB.createObject('PythonScriptController',classname="Controller")

                ##########################################
                #               Cable 3                  #
                ##########################################
                cable_position3=[
                        " 0.0 0.005 0.005       0.05 0.005 0.00433333333333     0.1 0.005 0.00366666666667      0.15 0.005 0.003        0.2 0.005 0.00233333333333      0.25 0.005 0.00166666666667 "+
                        " 0.3 0.005 0.001       0.35 0.005 0.000333333333333        0.4 0.005 -0.000333333333333        0.45 0.005 -0.001       0.5 0.005 -0.00166666666667     0.55 0.005 -0.00233333333333 "+
                        " 0.6 0.005 -0.003      0.65 0.005 -0.00366666666667        0.7 0.005 -0.00433333333333     0.75 0.005 -0.005  "
                            ]
                # # # #  This create a new node in the scene. This node is appended to the finger's node.
                cableC = tetraMesh.createChild('cableC')
                cableC.createObject('MechanicalObject', name="cablePos", position=cable_position3,  showObject="1", showIndices="0")
                cableC.createObject('CableConstraint', name="aCableActuator",
                                        indices=range(0,16),
                                        # indices='0 1 3 4 5 6 7 8 ',
                                        template='Vec3d',
                                        pullPoint="-0.10 0.0035 0.0035",
                                        #hasPullPoint="0",
                                        valueType='force',
                                        minForce=-0.0001,
                                        #value='3.0'
                                        )
                cableC.createObject('BarycentricMapping', input_topology="@../Container")

                cableC.createObject('PythonScriptController',classname="Controller")

                # CylinderFEMNode.createObject('LinearSolverConstraintCorrection')
                CylinderFEMNode.createObject('GenericConstraintCorrection', solverName='solver')

                return rootNode
